@using Microsoft.AspNetCore.Identity
@using Todo.Services

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">

                    @{

                        var iu = await UserManager.GetUserAsync(User);
                        var emailAddress = await UserManager.GetEmailAsync(iu);
                        
                        var profile = await @Gravatar.GetGravatarUser(emailAddress);
                    }

                    <div class="row">
                        <div class="col-xs-9 text-left">
                            <div class="text-uppercase">@profile.DisplayName</div>
                            <div>@profile.EmailAddress</div>
                        </div>
                        <div class="col-xs-3 text-right">
                            <img src="@profile.AvatarUrl?s=30" class="img-circle" alt="Avatar" />
                        </div>
                    </div>
                </a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}